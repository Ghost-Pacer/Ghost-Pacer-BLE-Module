import asyncio

import watch
import sync_run
import ble_microchip
from rundown1_pb2 import DownloadedRun
from runup1_pb2 import UploadedRun


async def main():
    await upload_to_phone_test("./test_runs/uploaded_run.txt")
    # await download_from_phone_test()
    # await watch_test()


async def download_from_phone_test():
    await ble_microchip.open_connection()
    await ble_microchip.flush_read_stream()
    await ble_microchip.connect_device()
    print("Began fetching phone data...")
    run = await sync_run.download_run()
    print(run)
    assert await ble_microchip.disconnect_device()


async def upload_to_phone_test(file_path: str):
    file = open(file_path, "rb")
    serialized_run = file.read()
    file.close()

    run = UploadedRun()
    run.ParseFromString(serialized_run)

    await ble_microchip.open_connection()
    assert await ble_microchip.connect_device()
    await sync_run.upload_run(run)
    assert await ble_microchip.disconnect_device()
    print("Finished transmitting data.")


async def watch_test():
    await ble_microchip.open_connection()
    assert await ble_microchip.connect_device()
    print("Began fetching watch data...")

    main_loop = asyncio.get_event_loop()
    main_loop.create_task(watch.fetch_watch_data())

    while True:
        await asyncio.sleep(1)
        watch_data = watch.watch_data
        print("Latitude: " + str(watch_data.latitude))
        print("Longitude: " + str(watch_data.longitude))
        print("Altitude: " + str(watch_data.altitude))
        print("Speed: " + str(watch_data.speed))
        print("Heart Rate: " + str(watch_data.heart_rate))
        print("Total packets received: " + str(watch.packets_received))
        print("**********")
        print()


async def export_protobuf(file_path: str):
    total_distance = 413.0295132011648
    start_time = 1602977525.2487347
    start_lat = 47.733162
    start_lon = -122.327781
    track_start_point = 0
    comp_lat_dist = [
        0.0,
        17.954767328569837,
        38.550022200508145,
        46.922703740003286,
        58.698630967425274,
        73.28071973399783,
        213.3001244391058,
        229.32042838480163,
        247.1835302008016,
        265.44028601222794,
        286.36979059447293,
        413.0295132011648,
    ]
    comp_lat = [
        3.5440246807770657,
        20.55687195658067,
        28.45172265396284,
        30.008453777021703,
        28.562917733928714,
        20.445676876614797,
        -117.54741769347784,
        -130.55724208060744,
        -138.78567801788722,
        -139.34165341913126,
        -122.32880614332764,
        2.87685419956717,
    ]
    comp_lon_dist = [
        0.0,
        12.96505544696679,
        17.954767328569837,
        73.28071973399783,
        78.76802634680581,
        120.42680296188284,
        127.24853824601558,
        140.73851177883733,
        146.76743359035282,
        165.9106988900974,
        204.47222459606346,
        213.3001244391058,
        229.32042838480163,
        247.1835302008016,
        265.44028601222794,
        286.36979059447293,
        304.14994797956666,
        382.4479744124054,
        411.6990413523976,
        413.0295132011648,
    ]
    comp_lon = [
        0.3584909638747362,
        -2.333879433152207,
        -4.8018856313782505,
        -55.6577709241939,
        -58.35014132118782,
        -63.80967018206612,
        -65.67937184885875,
        -65.00627924866134,
        -63.73488211706897,
        -65.82894798075583,
        -62.61306111737313,
        -60.96772365318134,
        -51.61921532679441,
        -35.764145206644685,
        -17.515856955105537,
        -5.325402097783928,
        1.4055238966862025,
        0.5080670957742742,
        0.8820074302804698,
        0.3584909638747362,
    ]
    saved_time = [
        0.0,
        3.2247815132141113,
        4.351500988006592,
        5.826592683792114,
        6.531537294387817,
        10.343876361846924,
        12.251576900482178,
        15.073906898498535,
        16.263924837112427,
        18.227691650390625,
        20.08320689201355,
        21.122926473617554,
        21.753384351730347,
        23.518449306488037,
        25.128230094909668,
        25.57250142097473,
        27.189309120178223,
        27.69251775741577,
        29.35225009918213,
        29.872826099395752,
        31.576016664505005,
        33.53633260726929,
        34.78351140022278,
        36.206647634506226,
        38.00546669960022,
        39.739718198776245,
        42.161112785339355,
        44.1121723651886,
        44.73095226287842,
        46.39452004432678,
        46.91241216659546,
        48.593339920043945,
        50.207772970199585,
        50.68779969215393,
        52.38799738883972,
        52.888094902038574,
        54.54569435119629,
        56.248594760894775,
        56.734835386276245,
        58.446033239364624,
        58.99681639671326,
        60.871694564819336,
        62.5662145614624,
        64.68270969390869,
        66.11644721031189,
        66.77091932296753,
        68.55513525009155,
        70.30331182479858,
        70.83337593078613,
        72.53695297241211,
        74.2644681930542,
        74.75433707237244,
        76.4655270576477,
        76.99703407287598,
        78.78131699562073,
        80.50524640083313,
        82.57171416282654,
        84.09017944335938,
        85.54100799560547,
        86.55928683280945,
        88.35470485687256,
        88.90945315361023,
        90.63501644134521,
        92.92937636375427,
        94.71678423881531,
        96.38524723052979,
        99.31770324707031,
        100.8647198677063,
        102.61104226112366,
        104.422438621521,
        105.41479420661926,
        107.09652996063232,
        107.43614721298218,
        107.786794424057,
        109.2467212677002,
        109.61541080474854,
        109.99460959434509,
        110.59578514099121,
        111.22259020805359,
        111.89476656913757,
        112.50680541992188,
        113.104975938797,
        113.71633291244507,
        114.25053882598877,
        114.7248113155365,
        115.24741506576538,
        115.82217574119568,
        116.48825669288635,
        117.21504259109497,
        118.03363418579102,
        118.6834135055542,
        119.11353945732117,
        119.34311151504517,
        119.57577681541443,
        119.80513119697571,
        121.25516772270203,
        121.61375713348389,
        121.98288464546204,
        122.57867741584778,
        123.30370616912842,
        124.13585209846497,
        124.67767333984375,
        125.20150423049927,
        125.72180318832397,
        126.30135369300842,
        126.95825791358948,
        127.50123929977417,
        128.04346323013306,
        128.5400140285492,
        129.05430698394775,
        129.73804140090942,
        130.3506202697754,
        130.917165517807,
        131.48014664649963,
        132.0503168106079,
        132.78828358650208,
        133.3248586654663,
        133.78704738616943,
        134.35344171524048,
        135.03255414962769,
        135.73506093025208,
        136.2624008655548,
        136.6900770664215,
        137.24219608306885,
        138.06574296951294,
        138.55223560333252,
        139.0334770679474,
        139.66701221466064,
        140.27578997612,
        140.86432671546936,
        141.443913936615,
        142.0337176322937,
        142.6345853805542,
        143.28334164619446,
        143.9835820198059,
        144.8106861114502,
        1033599.7563652992,
    ]

    run_data = UploadedRun()
    run_data.totalDistance = total_distance
    run_data.startTime = start_time
    run_data.startLat = start_lat
    run_data.startLon = start_lon
    run_data.trackStartPoint = track_start_point
    run_data.compLatDist.extend(comp_lat_dist)
    run_data.compLat.extend(comp_lat)
    run_data.compLonDist.extend(comp_lon_dist)
    run_data.compLon.extend(comp_lon)
    run_data.savedTime.extend(saved_time)

    print(run_data)

    file = open(file_path, "wb")
    file.write(run_data.SerializeToString())
    file.close()


if __name__ == "__main__":
    main_loop = asyncio.get_event_loop()
    try:
        main_loop.run_until_complete(main())
    finally:
        main_loop.close()
